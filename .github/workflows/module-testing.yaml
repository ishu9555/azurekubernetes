name: Module Testing

on:
  workflow_dispatch:
  pull_request:
    paths:
      - '**/*.tf'               ## trigger if any terraform file has ben modified.
      - 'scripts/*.sh'          ## trigger if any involved script has been modified.
      - 'tests/*.tftest.hcl'    ## trigger if any test has been modified.
      # - 'tests/*_test.go'       ## trigger if any test has been modified

permissions:
   pull-requests: write

concurrency:
  group: testing

jobs:
  moduleTesting:
    runs-on: ubuntu-latest
    env:
      ARM_SUBSCRIPTION_ID: "${{ vars.ARM_SUBSCRIPTION_ID }}"
      ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
      ARM_CLIENT_SECRET: "${{ secrets.AZURE_CLIENT_SECRET }}"
      ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID}}"

    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6

      ## Static Analysis and Linting Test (Unit Testing)
      - name: Terraform validate on all examples
        run: |
          CURRENT_DIR="$(pwd)"
          for dir in ./examples/*; do
            if [[ -d "$dir" ]]; then
              echo "$dir"
              cd "$dir" || exit
              terraform init
              terraform validate
              cd "${CURRENT_DIR}" || exit
            fi
          done

      ## Integrating testing using terraform native testing
      - name: Testing complete example
        working-directory: "${{ github.workspace }}/tests"
        id: testing
        run: |
          terraform init
          RESULT=$(terraform test)
          echo $RESULT
          echo "result=$RESULT" >> "$GITHUB_OUTPUT"

      - name: Comment the Test Result on PR
        uses: thollander/actions-comment-pull-request@v2
        with:
          reactions: rocket
          comment_tag: testing-result
          message: |
            :gear: **Testing Result** :gear:
            ${{ steps.testing.outputs.result }}
      # - name: Set up Go
      #   uses: actions/setup-go@v4
      #   with:
      #     go-version: '1.21.x'
      #     cache: false

      # - name: Testing examples with Terratest
      #   run: go test -v -timeout=60m
      #   working-directory: "${{ github.workspace }}/tests"
